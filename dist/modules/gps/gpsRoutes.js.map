{"version":3,"sources":["../../../src/modules/gps/gpsRoutes.ts"],"sourcesContent":["\r\nimport { Router } from \"express\";\r\nimport { log as gpsRoutesLog } from \"@utils/logger\";\r\n\r\nimport { authenticateUser } from \"../authenticateUser\";\r\n\r\nimport {gpsPortState, defaultInvalidGpsData, currentGPSData} from \"@modules/gps/gps\"\r\n\r\nfunction log (message)\r\n{\r\n    gpsRoutesLog ('gpsRoutes > ' + message);\r\n}\r\n\r\n\r\nconst gpsRoutes = Router();\r\n\r\n// get current GPS data\r\ngpsRoutes.get('/', authenticateUser, async (req, res) => {\r\n\r\n    if (gpsPortState === true) {\r\n        log ('Sending GPS: ' + JSON.stringify(currentGPSData));\r\n        res.send(currentGPSData)\r\n    }\r\n    else {\r\n        log ('GPS port not open');\r\n        res.send(defaultInvalidGpsData)\r\n    }\r\n\r\n});\r\n\r\n// get current GPS lat/long only\r\ngpsRoutes.get('/xy', authenticateUser, async (req, res) => {\r\n\r\n    const xy = {latitude: currentGPSData.latitude, longitude: currentGPSData.longitude };\r\n\r\n    log ('Sending XY GPS: ' + JSON.stringify(xy));\r\n    res.send(xy)\r\n\r\n  });\r\n\r\n\r\nexport default gpsRoutes;"],"names":["log","message","gpsRoutesLog","gpsRoutes","Router","get","authenticateUser","req","res","gpsPortState","JSON","stringify","currentGPSData","send","defaultInvalidGpsData","xy","latitude","longitude"],"mappings":";;;;+BAyCA;;;eAAA;;;uBAxCuB;sBACa;gCAEH;mBAEiC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAElE,SAASA,IAAKC,OAAO;IAEjBC,IAAAA,WAAY,EAAE,iBAAiBD;AACnC;AAGA,IAAME,YAAYC,IAAAA,eAAM;AAGxBD,UAAUE,GAAG,CAAC,KAAKC,kCAAgB;eAAE,oBAAA,SAAOC,KAAKC;;YAE7C,IAAIC,iBAAY,KAAK,MAAM;gBACvBT,IAAK,kBAAkBU,KAAKC,SAAS,CAACC,mBAAc;gBACpDJ,IAAIK,IAAI,CAACD,mBAAc;YAC3B,OACK;gBACDZ,IAAK;gBACLQ,IAAIK,IAAI,CAACC,0BAAqB;YAClC;;;;;IAEJ;oBAX4CP,KAAKC;;;;AAcjDL,UAAUE,GAAG,CAAC,OAAOC,kCAAgB;eAAE,oBAAA,SAAOC,KAAKC;YAEzCO;;YAAAA,KAAK;gBAACC,UAAUJ,mBAAc,CAACI,QAAQ;gBAAEC,WAAWL,mBAAc,CAACK,SAAS;YAAC;YAEnFjB,IAAK,qBAAqBU,KAAKC,SAAS,CAACI;YACzCP,IAAIK,IAAI,CAACE;;;;;IAEX;oBAP4CR,KAAKC;;;;IAUnD,WAAeL"}