{"version":3,"sources":["../../../src/modules/bowmonk/bowmonkRoutes.ts"],"sourcesContent":["\r\nimport { Router } from \"express\";\r\nimport { log as bowmonkRoutesLog } from \"@utils/logger\";\r\n\r\nimport { authenticateUser } from \"../authenticateUser\";\r\n\r\nimport { RSC_READING_MAX_AGE, } from \"@config\";\r\n\r\nimport {bowmonkPortState, bowmonkReadings } from \"@modules/bowmonk/bowmonk\";\r\n\r\nconst bowmonkRoutes = Router();\r\n\r\n\r\nfunction log (message)\r\n{\r\n  bowmonkRoutesLog ('bowmonkRoutes > ' + message);\r\n}\r\n\r\n\r\nbowmonkRoutes.get('/', authenticateUser, async (req, res) => {\r\n\r\n  // get available bowmonk readings\r\n  if ((bowmonkPortState === true) && (bowmonkReadings.length > 0)){\r\n\r\n      // remove old readings (older than RSC_READING_MAX_AGE minutes)\r\n      const validBowmonkReadings = bowmonkReadings.filter(bowmonkReading => Date.parse(bowmonkReading.readingTime) > new Date().getTime() - (RSC_READING_MAX_AGE * 60000));\r\n      const invalidBowmonkReadings = bowmonkReadings.filter(bowmonkReading => Date.parse(bowmonkReading.readingTime) <= new Date().getTime() - (RSC_READING_MAX_AGE * 60000));\r\n\r\n      validBowmonkReadings.forEach(bowmonkReading => console.log('Keeping: ' + bowmonkReading.readingTime));\r\n      invalidBowmonkReadings.forEach(bowmonkReading => console.log('Rejecting: ' + bowmonkReading.readingTime));\r\n\r\n      log ('Sending ' + validBowmonkReadings.length + ' readings to web app');\r\n      res.send(validBowmonkReadings);\r\n\r\n  }\r\n  else\r\n      res.send([{}]);\r\n\r\n\r\n});\r\n\r\nbowmonkRoutes.delete('/', authenticateUser, async (req, res) => {\r\n\r\n  const { readingTime } = req.body\r\n\r\n  try {\r\n\r\n    // remove reading from bowmonkReadings array\r\n\r\n\r\n    res.send({status: true})\r\n\r\n  }\r\n  catch(error) {\r\n    console.log(error)\r\n    res.status(409).send({ status: false, error: error })\r\n  }\r\n\r\n\r\n});\r\n\r\nexport default bowmonkRoutes"],"names":["bowmonkRoutes","Router","log","message","bowmonkRoutesLog","get","authenticateUser","req","res","validBowmonkReadings","invalidBowmonkReadings","bowmonkPortState","bowmonkReadings","length","filter","bowmonkReading","Date","parse","readingTime","getTime","RSC_READING_MAX_AGE","forEach","console","send","delete","body","status","error"],"mappings":";;;;+BA6DA;;;eAAA;;;uBA5DuB;sBACiB;gCAEP;sBAEI;uBAEY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEjD,IAAMA,gBAAgBC,IAAAA,eAAM;AAG5B,SAASC,IAAKC,OAAO;IAEnBC,IAAAA,WAAgB,EAAE,qBAAqBD;AACzC;AAGAH,cAAcK,GAAG,CAAC,KAAKC,kCAAgB;eAAE,oBAAA,SAAOC,KAAKC;YAMzCC,sBACAC;;YAJV,IAAI,AAACC,yBAAgB,KAAK,QAAUC,wBAAe,CAACC,MAAM,GAAG,GAAG;gBAGtDJ,uBAAuBG,wBAAe,CAACE,MAAM,CAACC,SAAAA;2BAAkBC,KAAKC,KAAK,CAACF,eAAeG,WAAW,IAAI,IAAIF,OAAOG,OAAO,KAAMC,2BAAmB,GAAG;;gBACvJV,yBAAyBE,wBAAe,CAACE,MAAM,CAACC,SAAAA;2BAAkBC,KAAKC,KAAK,CAACF,eAAeG,WAAW,KAAK,IAAIF,OAAOG,OAAO,KAAMC,2BAAmB,GAAG;;gBAEhKX,qBAAqBY,OAAO,CAACN,SAAAA;2BAAkBO,QAAQpB,GAAG,CAAC,cAAca,eAAeG,WAAW;;gBACnGR,uBAAuBW,OAAO,CAACN,SAAAA;2BAAkBO,QAAQpB,GAAG,CAAC,gBAAgBa,eAAeG,WAAW;;gBAEvGhB,IAAK,aAAaO,qBAAqBI,MAAM,GAAG;gBAChDL,IAAIe,IAAI,CAACd;YAEb,OAEID,IAAIe,IAAI;gBAAE,CAAC;;;;;;IAGjB;oBApBgDhB,KAAKC;;;;AAsBrDR,cAAcwB,MAAM,CAAC,KAAKlB,kCAAgB;eAAE,oBAAA,SAAOC,KAAKC;YAE9CU;;YAAAA,cAAgBX,IAAIkB,IAAI,CAAxBP;YAER,IAAI;gBAKFV,IAAIe,IAAI,CAAC;oBAACG,QAAQ;gBAAI;YAExB,EACA,OAAMC,OAAO;gBACXL,QAAQpB,GAAG,CAACyB;gBACZnB,IAAIkB,MAAM,CAAC,KAAKH,IAAI,CAAC;oBAAEG,QAAQ;oBAAOC,OAAOA;gBAAM;YACrD;;;;;IAGF;oBAlBmDpB,KAAKC;;;;IAoBxD,WAAeR"}