{"version":3,"sources":["../../../src/modules/vaisala/vaisalaRoutes.ts"],"sourcesContent":["\r\nimport { Router } from \"express\";\r\n\r\nimport { log as vaisalaLog } from \"@utils/logger\";\r\n\r\nimport { authenticateUser } from \"../authenticateUser\";\r\n\r\nimport {vaisalaPortState, ambientTemperature} from \"@modules/vaisala/vaisala\"\r\n\r\nconst vaisalaRoutes = Router();\r\n\r\nfunction log (message)\r\n{\r\n    vaisalaLog('vaisala > ' + message);\r\n}\r\n\r\nvaisalaRoutes.get('/', authenticateUser, async (req, res) => {\r\n\r\n  if (vaisalaPortState === true)\r\n      log ('Sending Ambient Temperature: ' + ambientTemperature);\r\n  else\r\n      log ('Vaisala port not open');\r\n\r\n  res.send({ambientTemperature: ambientTemperature})\r\n\r\n});\r\n\r\nexport default vaisalaRoutes"],"names":["vaisalaRoutes","Router","log","message","vaisalaLog","get","authenticateUser","req","res","vaisalaPortState","ambientTemperature","send"],"mappings":";;;;+BA2BA;;;eAAA;;;uBA1BuB;sBAEW;gCAED;uBAEkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEnD,IAAMA,gBAAgBC,IAAAA,eAAM;AAE5B,SAASC,IAAKC,OAAO;IAEjBC,IAAAA,WAAU,EAAC,eAAeD;AAC9B;AAEAH,cAAcK,GAAG,CAAC,KAAKC,kCAAgB;eAAE,oBAAA,SAAOC,KAAKC;;YAEnD,IAAIC,yBAAgB,KAAK,MACrBP,IAAK,kCAAkCQ,2BAAkB;iBAEzDR,IAAK;YAETM,IAAIG,IAAI,CAAC;gBAACD,oBAAoBA,2BAAkB;YAAA;;;;;IAElD;oBATgDH,KAAKC;;;;IAWrD,WAAeR"}